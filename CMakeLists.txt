project(Builder)

cmake_minimum_required(VERSION 2.8)

#flag for c++ 11
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )

set(MY_SEARCHING_HPP_FOLDER "")
set(MY_SEARCHING_CPP_FOLDER "")

list(APPEND MY_SEARCHING_HPP_FOLDER "src/*.hpp")
list(APPEND MY_SEARCHING_CPP_FOLDER "src/*.cpp")

file(GLOB_RECURSE EXECUTABLE_FILES ${MY_SEARCHING_CPP_FOLDER})
file(GLOB_RECURSE HEADER_FILES ${MY_SEARCHING_HPP_FOLDER})
set (ALL_INCLUDE_DIRS "")
foreach (_headerFile ${HEADER_FILES})
    get_filename_component(_dir ${_headerFile} PATH)
    list (APPEND ALL_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES ALL_INCLUDE_DIRS)

INCLUDE(FindPkgConfig)
PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)

#adding executables
add_executable(builder ${EXECUTABLE_FILES} ${HEADER_FILES})

include_directories(${ALL_INCLUDE_DIRS} ${SDL2_INCLUDE_DIRS})
target_link_libraries (builder ${SDL2_LIBRARIES})

#INCLUDE(FindPkgConfig)
#PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
#PKG_SEARCH_MODULE(SDL2_image REQUIRED sdl2_image)
#INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS} ${SDL2IMAGE_INCLUDE_DIR})
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARY})
